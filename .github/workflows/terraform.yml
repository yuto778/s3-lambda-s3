# .github/workflows/terraform.yml
name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      destroy:
        description: "本当に destroy しますか？"
        required: true
        default: "no"

env:
  TF_WORKING_DIR: "./" # Terraform ルートディレクトリ
  TF_VERSION: "1.5.7"
  AWS_REGION: "ap-northeast-1"

jobs:
  terraform-plan:
    name: "🗺️ Terraform Plan"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -no-color -input=false

      - name: Comment PR with Plan
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: ${{ env.TF_WORKING_DIR }}/plan.txt
          recreate: true

  terraform-apply:
    name: "🚀 Terraform Apply"
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.event_name == 'push'
    environment: production # GitHub Environments で承認者を設定しておく
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve

  terraform-destroy:
    name: "💣 Terraform Destroy"
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'yes'
    environment: production # 同じく承認者を設定
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -input=false -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Destroy
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform destroy -auto-approve
